// reverse list
func reverseList(head: SingleListNode?) -> SingleListNode? {
    var newHead: SingleListNode? = nil
    var inputHead = head
    
    while inputHead != nil {
        inputHead?.next = newHead
        newHead = inputHead
        inputHead = inputHead?.next
    }
    
    return newHead
}

// middle node
func middleNode(head: SingleListNode?) -> SingleListNode? {
    var walker = head
    var runner = head
    
    while runner != nil && runner?.next != nil {
        runner = runner?.next?.next
        walker = walker?.next
    }
    
    return walker
}
